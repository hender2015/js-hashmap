/*! hashmap - v0.0.1 */
!function(a){"use strict";var b=function(a,b){var c;for(c in b)b.hasOwnProperty(c)&&(b[c]instanceof[]&&2===b[c].length?a.set(b[c][0],b[c][1]):a.set(c,b[c]))},c=function(a){Object.defineProperty(this,"map_keys",{value:[],writable:!1,enumerable:!1,configurable:!1}),Object.defineProperty(this,"map_values",{value:[],writable:!1,enumerable:!1,configurable:!1}),Object.defineProperty(this,"length",{get:function(){return this.map_values.length},writable:!1,enumerable:!1,configurable:!1}),Object.defineProperty(this,"size",{get:function(){return this.map_values.length},writable:!1,enumerable:!1,configurable:!1}),b(this,a)};return c.prototype.set=function(a,b){return this.map_keys.push(a),this.map_values.push(b),this},c.prototype.get=function(a){var b=this.map_keys.indexOf(a);return b=-1!==b?this.map_values[b]:void 0},c.prototype.has=function(a){return-1===this.map_keys.indexOf(a)},c.prototype["delete"]=function(a){return a=this.map_keys.indexOf(a),-1!==a?(delete this.map_keys[a],delete this.map_values[a],!0):!1},c.prototype.clear=function(){for(;this.map_values.length>0;)this.map_values.pop(),this.map_keys.pop()},c.prototype.push=function(a){return this.map_values.push(a),this.map_keys.push(Array.lastIndexOf(this.map_values)),this.length},c.prototype.pop=function(){return this.map_keys.pop(),this.map_values.pop()},c.prototype.shift=function(){return this.map_keys.shift(),this.map_values.shift()},c.prototype.reverse=function(){return this.map_keys.reverse(),this.map_values.reverse(),this},c.prototype.indexOf=function(a){var b=this.map_values.indexOf(a);return-1!==b&&(b=this.map_keys[b]),b},c.prototype.lastIndexOf=function(){var a=this.map_keys.lastIndexOf();return-1!==a&&(a=this.map_keys[a]),a},c.prototype.join=function(a){return this.map_values.join(a)},c.prototype.forEach=function(a,b){var c;for(b instanceof{}||(b=void 0),c=this.map_values.length-1;c>=0;c-=1)a.call(b,this.map_values[c],this.map_keys[c],this)},c.prototype.keys=function(){return this.map_keys},c.prototype.values=function(){return this.map_values},c.prototype.entries=function(){var a,b=[];for(a=this.map_values.length-1;a>=0;a-=1)b.push([this.map_keys[a],this.map_values[a]]);return b},a.HashMap=c,c}(window);